{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Questions 11 and 12 in assignment 1 and question 4 in assignment 2 have snippets of code that you may want to reuse in this assignment.
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\'a0\

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 To change the appearance of the progress bar, we can change its value property. \'a0So for example in jQuery, we can can write: \'a0$('progress').val(5);\'a0
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\'a0\

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The following function is provided to help you in your implementation. \'a0It is not useful as it is. \'a0You'll have to write your own code to perform the letter check but you may use this function for inspiration...
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 function check(answer, letter) \{
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 /*
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0* Checks all occurrences of a letter guessed against the answer.\'a0
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0* Returns true if the letter is found in the answer and false otherwise.\'a0
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0* Outputs all the positions of the letter (if any) to the console
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0* This function is case sensitive
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0*/
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 var position;
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 var result = false;
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 if (letter) \{ \'a0 // check that letter is not the empty string
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 // Find the first occurrence of guess in the answer
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 position = answer.indexOf(letter);
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 // if the guessed letter is found in the answer
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 if (position > - 1) \{
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 result = true;
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \}
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 while (position >= 0) \{
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // log the result and find all remaining occurrences
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 console.log(position);
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // get the next occurrence, search for the letter in the remainder of the word.
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 position = answer.indexOf(letter, position + 1);
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \'a0 \'a0 \}
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 \}
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 return result;
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \}
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\'a0\

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The template provided guess.js includes an outline that will be helpful.\'a0
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\'a0\

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The focus method may be used to bring the keyboard focus to the input (with id "guessedletter") as follows:
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0 \'a0 $('#guessedletter').focus();
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sa240
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'a0\
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\
\'a0 {\field{\*\fldinst{HYPERLINK "https://myetudes.org/portal/tool/b349b38c-3396-4988-8080-98223a86b5fb/question/16100674/q30829854/-/list#"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 Instructions}} }